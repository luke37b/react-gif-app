{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","includes","type","value","onChange","target","getGifs","category","a","q","encodeURI","url","fetch","res","json","data","gifList","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","gifs","useFetchGifs","g","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAuB9C,OACI,sBAAMC,SAhBW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GACV,OAAKA,EAAKC,SAASR,GAGRO,EAFD,CAAEP,GAAR,mBAAuBO,OAK/BN,EAAc,MAKlB,SACI,uBAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SAtBpB,SAACR,GACvB,IAAMO,EAAQP,EAAES,OAAOF,MACvBT,EAAcS,S,+BCRTG,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACbC,EAAIC,UAAUH,GACJ,mCACF,EACRI,EAJa,uDAEH,mCAFG,cAIsDF,EAJtD,kBAGL,GAHK,SAKDG,MAAMD,GALL,cAKbE,EALa,gBAMIA,EAAIC,OANR,uBAMXC,EANW,EAMXA,KACFC,EAAUD,EAAKE,KAAI,kBAA2D,CAAEC,GAA7D,EAAGA,GAA8DC,MAAjE,EAAOA,MAAiER,IAAxE,EAAcS,OAAUC,iBAAoBV,QAPlD,kBASZK,GATY,4CAAH,sDCEPM,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOR,EAAU,EAAVA,IAErC,OACI,sBAAKY,UAAU,yCAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKb,EAAKc,IAAKN,QCHnBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAGZf,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAmBtC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGtB,CAACpB,IAGGqB,EDhByBK,CAAa1B,GAArCoB,EAF6B,EAE7BA,QAAeK,EAFc,EAEpBjB,KAEjB,OACI,qCACI,oBAAIQ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,sBAEZ,qBAAKA,UAAU,aAAf,SAEQS,EAAKf,KAAI,SAAAiB,GAAC,OACN,cAAC,EAAD,eAEQA,GADCA,EAAEhB,aEdtBiB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,WAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,qCACI,kDACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BACK6C,EAAWnB,KAAI,SAAAoB,GAAC,OACb,cAAC,EAAD,CAEI9B,SAAU8B,GADLA,Y,MCZ7BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.68556944.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const value = e.target.value\r\n        setInputValue(value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => {\r\n                if (!cats.includes(inputValue)) {\r\n                    return [inputValue, ...cats]\r\n                } else {\r\n                    return cats;\r\n                }\r\n            });\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n    const q = encodeURI(category);\r\n    const api_key = '1sW8wdvpUULnz7GL8COi032zeh8qfVQo';\r\n    const limit = 4;\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${q}&limit=${limit}`\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifList = data.map(({ id, title, images: { downsized_medium: { url } } }) => ({ id, title, url }));\r\n\r\n    return gifList;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { loading, data: gifs } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n\r\n            <div className=\"card-grid \">\r\n                {\r\n                    gifs.map(g =>\r\n                        <GifGridItem\r\n                            key={g.id}\r\n                            {...g}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n\r\n    return state; // { data: [], loading: true };\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Homero']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Buscador de Gifs</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {categories.map(c =>\r\n                    <GifGrid\r\n                        key={c}\r\n                        category={c}\r\n                    />\r\n                )}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}